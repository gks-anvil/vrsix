name: Checks
on: [push, pull_request]
jobs:
  python-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version:  ${{ matrix.python-version }}

      - name: Install dependencies
        run: python3 -m pip install ".[tests]"

      - name: Run tests
        run: python3 -m pytest tests/
  python-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: python3 -m pip install ".[dev]"

      - name: Check style
        run: python3 -m ruff check . && python3 -m ruff format --check .
  rust-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v4

      - run: rustup update stable && rustup default stable

      - run: cargo build --verbose

      - run: cargo test --verbose
  rust-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust
    steps:
      - uses: actions/checkout@v4

      - name: Update Rust
        run: rustup update stable && rustup default stable

      - name: Install rustfmt
        run: rustup component add rustfmt

      - run: cargo fmt -- --check
  precommit_hooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        - cmd: "end-of-file-fixer"
        - cmd: "trailing-whitespace"
        - cmd: "mixed-line-ending"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: ${{ matrix.cmd }} --all-files
